// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/nogizaka.proto

/*
Package nogizaka is a generated protocol buffer package.

It is generated from these files:
	proto/nogizaka.proto

It has these top-level messages:
	MemberName
	Profile
*/
package nogizaka

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MemberName struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *MemberName) Reset()                    { *m = MemberName{} }
func (m *MemberName) String() string            { return proto.CompactTextString(m) }
func (*MemberName) ProtoMessage()               {}
func (*MemberName) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MemberName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Profile struct {
	Id            int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description   string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Birthday      string `protobuf:"bytes,4,opt,name=birthday" json:"birthday,omitempty"`
	Constellation string `protobuf:"bytes,5,opt,name=constellation" json:"constellation,omitempty"`
	Height        string `protobuf:"bytes,6,opt,name=height" json:"height,omitempty"`
	Status        string `protobuf:"bytes,7,opt,name=status" json:"status,omitempty"`
}

func (m *Profile) Reset()                    { *m = Profile{} }
func (m *Profile) String() string            { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()               {}
func (*Profile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Profile) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Profile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Profile) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Profile) GetBirthday() string {
	if m != nil {
		return m.Birthday
	}
	return ""
}

func (m *Profile) GetConstellation() string {
	if m != nil {
		return m.Constellation
	}
	return ""
}

func (m *Profile) GetHeight() string {
	if m != nil {
		return m.Height
	}
	return ""
}

func (m *Profile) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*MemberName)(nil), "nogizaka.MemberName")
	proto.RegisterType((*Profile)(nil), "nogizaka.Profile")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for NogizakaProfile service

type NogizakaProfileClient interface {
	FetchProfile(ctx context.Context, in *MemberName, opts ...grpc.CallOption) (*Profile, error)
}

type nogizakaProfileClient struct {
	cc *grpc.ClientConn
}

func NewNogizakaProfileClient(cc *grpc.ClientConn) NogizakaProfileClient {
	return &nogizakaProfileClient{cc}
}

func (c *nogizakaProfileClient) FetchProfile(ctx context.Context, in *MemberName, opts ...grpc.CallOption) (*Profile, error) {
	out := new(Profile)
	err := grpc.Invoke(ctx, "/nogizaka.NogizakaProfile/FetchProfile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for NogizakaProfile service

type NogizakaProfileServer interface {
	FetchProfile(context.Context, *MemberName) (*Profile, error)
}

func RegisterNogizakaProfileServer(s *grpc.Server, srv NogizakaProfileServer) {
	s.RegisterService(&_NogizakaProfile_serviceDesc, srv)
}

func _NogizakaProfile_FetchProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NogizakaProfileServer).FetchProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nogizaka.NogizakaProfile/FetchProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NogizakaProfileServer).FetchProfile(ctx, req.(*MemberName))
	}
	return interceptor(ctx, in, info, handler)
}

var _NogizakaProfile_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nogizaka.NogizakaProfile",
	HandlerType: (*NogizakaProfileServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchProfile",
			Handler:    _NogizakaProfile_FetchProfile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/nogizaka.proto",
}

func init() { proto.RegisterFile("proto/nogizaka.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x3d, 0x4e, 0xc3, 0x40,
	0x10, 0x85, 0xb1, 0x13, 0x9c, 0x30, 0xfc, 0x89, 0x51, 0x84, 0x56, 0xa9, 0x2c, 0x8b, 0x82, 0x2a,
	0x48, 0x50, 0x71, 0x01, 0x2a, 0x88, 0x50, 0x6e, 0xb0, 0xb6, 0x87, 0x78, 0x84, 0xed, 0x8d, 0x76,
	0x87, 0x02, 0x6e, 0xc7, 0xcd, 0x10, 0xe3, 0x3f, 0xe8, 0xf6, 0xfb, 0xde, 0xdb, 0x62, 0x1e, 0xac,
	0x0e, 0xde, 0x89, 0xbb, 0x6b, 0xdd, 0x9e, 0xbf, 0xec, 0xbb, 0xdd, 0x28, 0xe2, 0x72, 0xe0, 0x2c,
	0x05, 0x78, 0xa1, 0x26, 0x27, 0xbf, 0xb5, 0x0d, 0x21, 0xc2, 0xbc, 0xb5, 0x0d, 0x99, 0x28, 0x8d,
	0x6e, 0x4f, 0x76, 0xfa, 0xce, 0xbe, 0x23, 0x58, 0xbc, 0x7a, 0xf7, 0xc6, 0x35, 0xe1, 0x05, 0xc4,
	0x5c, 0x6a, 0x3a, 0xdb, 0xc5, 0x5c, 0x8e, 0xfd, 0x78, 0xea, 0x63, 0x0a, 0xa7, 0x25, 0x85, 0xc2,
	0xf3, 0x41, 0xd8, 0xb5, 0x66, 0xa6, 0xd1, 0x5f, 0x85, 0x6b, 0x58, 0xe6, 0xec, 0xa5, 0x2a, 0xed,
	0xa7, 0x99, 0x6b, 0x3c, 0x32, 0xde, 0xc0, 0x79, 0xe1, 0xda, 0x20, 0x54, 0xd7, 0x56, 0xff, 0x1f,
	0x6b, 0xe1, 0xbf, 0xc4, 0x6b, 0x48, 0x2a, 0xe2, 0x7d, 0x25, 0x26, 0xd1, 0xb8, 0xa7, 0x5f, 0x1f,
	0xc4, 0xca, 0x47, 0x30, 0x8b, 0xce, 0x77, 0x74, 0xff, 0x0c, 0x97, 0xdb, 0xfe, 0xe2, 0xe1, 0x94,
	0x47, 0x38, 0x7b, 0x22, 0x29, 0xaa, 0x81, 0x57, 0x9b, 0x71, 0xa3, 0x69, 0x90, 0xf5, 0xd5, 0x64,
	0xfb, 0x62, 0x76, 0x94, 0x27, 0x3a, 0xe2, 0xc3, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xae, 0xd7,
	0xdf, 0x5a, 0x5c, 0x01, 0x00, 0x00,
}
